/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.unifil.javaconnection.views;

import edu.unifil.javaconnection.controllers.PessoaDao;
import edu.unifil.javaconnection.misc.State;
import edu.unifil.javaconnection.models.Pessoa;
import edu.unifil.javaconnection.views.tablemodels.PessoaTableModel;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author mhadaniya
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private Main() {
        initComponents();
        init();
    }

    public static Main getIstance() {
        if (instance != null) {
            instance = new Main();
        }
        return instance;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        lbNome = new javax.swing.JLabel();
        lbIdade = new javax.swing.JLabel();
        lbEmail = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtIdade = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePessoa = new javax.swing.JTable();
        lbBuscar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbNome.setText("Nome:");

        lbIdade.setText("Idade:");

        lbEmail.setText("E-mail:");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tablePessoa, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.nome}"), txtNome, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tablePessoa, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.idade}"), txtIdade, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tablePessoa, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.email}"), txtEmail, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/_img/Business-Man-Add-24.png"))); // NOI18N
        btnSalvar.setText("Adicionar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        tablePessoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablePessoa);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbBuscar.setText("Buscar:");

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/_img/Editor-24.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/_img/Business-Man-Delete 02-24.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jMenu1.setText("Java Connection");

        jMenuItem1.setText("Sair");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/_img/Data-Settings-24.png"))); // NOI18N
        jMenuItem2.setText("Configurações");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbEmail)
                                    .addComponent(lbNome))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtEmail)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSalvar)
                                .addGap(18, 18, 18)
                                .addComponent(btnAlterar)
                                .addGap(18, 18, 18)
                                .addComponent(btnExcluir)))
                        .addGap(37, 37, 37)
                        .addComponent(lbIdade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(lbBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbIdade)
                    .addComponent(txtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnAlterar)
                    .addComponent(btnSalvar)
                    .addComponent(btnExcluir))
                .addGap(13, 13, 13)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbBuscar)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void init() {
        this.setLocationRelativeTo(null); // centralizar na tela o frame
        /* Setar o State como modo Salvar */
        this.modo = this.modo.SALVAR;
        dao = new PessoaDao();
        this.txtBuscar.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = txtBuscar.getText();
                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {

                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                    tablePessoa.setRowSorter(rowSorter);

                }
                tablePessoa.repaint();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = txtBuscar.getText();
                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                    tablePessoa.setRowSorter(rowSorter);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
        this.ptm = new PessoaTableModel();

        /* Adicionado o modelo/controle da tabela que esta no View */
        tablePessoa.setModel(ptm);
        rowSorter.setModel(ptm);
        /*Limpamos os campos*/
        this.clearFields();
    }
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (verificar()) {
            switch (modo) {
                case SALVAR:
                    make(new Pessoa());
                    break;

                case ALTERAR:
                    p.setId(id_alterar);
                    p.setNome(txtNome.getText());
                    p.setIdade(Integer.parseInt(txtIdade.getText()));
                    p.setEmail(txtEmail.getText());

                    make(p);
                    break;
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed

        if (this.tablePessoa.getSelectedRow() >= 0) {
            /* Pega a linha selecionada da tablePessoa */
            int rowSelected = this.tablePessoa.getSelectedRow();
            // Pegamos um objeto pessoa
            Pessoa p = ptm.getPessoa(rowSelected);

            id_alterar = p.getId();
            int resp = JOptionPane.showConfirmDialog(
                    null,
                    "Deseja realmente excluir ?",
                    "Atenção", JOptionPane.YES_NO_OPTION);
            if (resp == JOptionPane.YES_OPTION) {
                modo = State.EXCLUIR;
                make(p);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Porfavor selecione uma pessoa da lista");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed


    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        //Setamos o modo para altera
        modo = State.ALTERAR;

        /* Pega a linha selecionada da tablePessoa */
        if (this.tablePessoa.getSelectedRow() >= 0) {
            int rowSelected = this.tablePessoa.getSelectedRow();

            // Pegamos um objeto pessoa
            p = ptm.getPessoa(rowSelected);
            id_alterar = p.getId();

            /*
             * Preenchemos os valores dos campos de acordo com a linha selecionada 
             */
            txtNome.setText(p.getNome());
            txtIdade.setText(String.valueOf(p.getIdade()));
            txtEmail.setText(p.getEmail());

            btnAlterar.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "Porfavor selecione uma pessoa da lista");
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        ConfigView cfg = ConfigView.getInstance();
        cfg.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void make(Pessoa p) {
        dao.start();
        int rowSelected = this.tablePessoa.getSelectedRow();
        switch (modo) {
            case SALVAR:
                String nome = txtNome.getText();
                int idade = Integer.parseInt(txtIdade.getText());
                String email = txtEmail.getText();
                p = new Pessoa(nome, idade, email);
                dao.insert(p);
                break;
            case ALTERAR:
                dao.update(p);
                this.ptm.fireTableDataChanged();
                break;
            case EXCLUIR:
                dao.delete(id_alterar);
                this.ptm.removePessoa(rowSelected);
                this.ptm.fireTableDataChanged();
                break;
        }
        clearFields();
    }

    private void clearFields() {
        this.tablePessoa.removeAll();
        this.ptm.fireTableDataChanged();

        this.ptm.setListaPessoas((ArrayList) dao.getAll());

        this.ptm.fireTableDataChanged();
        p = null;
        btnAlterar.setEnabled(true);
        txtNome.setText("");
        txtIdade.setText("");
        txtEmail.setText("");
        txtBuscar.setText("");
        rowSorter.setRowFilter(null);
        id_alterar = -1;
        modo = State.SALVAR;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    private PessoaDao dao;
    private static Main instance = null;
    private PessoaTableModel ptm;
    private long id_alterar;
    private Pessoa p;
    private State modo = State.SALVAR;
    private final TableRowSorter<TableModel> rowSorter = new TableRowSorter<TableModel>(ptm);
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBuscar;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbIdade;
    private javax.swing.JLabel lbNome;
    private javax.swing.JPanel panel;
    private javax.swing.JTable tablePessoa;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtIdade;
    private javax.swing.JTextField txtNome;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private boolean verificar() {
        String txt = txtEmail.getText();
        Pattern p = Pattern.compile("^\\.|^\\@");
        Matcher m = p.matcher(txt);

        if (txtNome.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O nome não pode ser vazio.");
            txtNome.requestFocus();
            return false;
        }

        String txt2 = txtIdade.getText();
        if (txtIdade.getText().isEmpty() || Integer.parseInt(txtIdade.getText()) < 0 || Integer.parseInt(txtIdade.getText()) > 130) {
            JOptionPane.showMessageDialog(null, "A idade não pode ser mais que 3 digitos ou menor que zero .");
            txtIdade.requestFocus();
            return false;
        }

        if (txt.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Endereço e-mail, não pode estar vazio.");
            txtEmail.requestFocus();
            return false;
        }

        if (m.find()) {
            JOptionPane.showMessageDialog(null, "Endereço e-mail, não começa com pontos ou sinais.");
            txtEmail.requestFocus();
            return false;
        }

        // Verifica se os endereços de e-mail que começam com 
        // www. e imprime uma mensagem se faz.
        p = Pattern.compile("^www\\.");
        m = p.matcher(txt);
        if (m.find()) {
            JOptionPane.showMessageDialog(null, "Endereço de E-mail não começa com \"www.\", apenas páginas da web.");
            txtEmail.requestFocus();
            return false;
        }
        p = Pattern.compile("[^A-Za-z0-9\\.\\@_\\-~#]+");
        m = p.matcher(txt);
        StringBuffer sb = new StringBuffer();
        boolean result = m.find();
        boolean deletedIllegalChars = false;

        while (result) {
            deletedIllegalChars = true;
            m.appendReplacement(sb, "");
            result = m.find();
        }

        // Adicionar o último segmento de entrada para a nova cadeia 
        m.appendTail(sb);

        txt = sb.toString();

        if (deletedIllegalChars) {
            JOptionPane.showMessageDialog(null, "Contém caracteres inválidos como espaços ou vírgulas");
            txtEmail.requestFocus();
            return false;
        }

        return true;
    }

}
